{"ast":null,"code":"function CheckExacts(generateCopy, guessCopy) {\n  let i = 0;\n  let exact = 0;\n  while (i < 4) {\n    //When a match is made, cross out the matched elements in both guess and secret.\n    if (generateCopy[i] === guessCopy[i]) {\n      exact = exact + 1;\n      generateCopy[i] = \"white\";\n      guessCopy[i] = \"black\";\n    }\n    i++;\n  }\n  return exact;\n}\n_c = CheckExacts;\nfunction CheckPartials(generateCopy, guessCopy) {\n  let i = 0;\n  let partial = 0;\n  while (i < 4) {\n    let j = 0;\n    while (j < 4) {\n      //When a match is made, cross out the matched elements in both guess and secret.\n      if (generateCopy[i] === guessCopy[j]) {\n        partial = partial + 1;\n        generateCopy[i] = \"white\";\n        guessCopy[i] = \"black\";\n      }\n      j++;\n    }\n    i++;\n  }\n  return partial;\n}\n_c2 = CheckPartials;\nfunction CheckMatches(generateColors, guessColors) {\n  let generateCopy = generateColors.slice();\n  let guessCopy = guessColors.slice();\n  const exact = CheckExacts(generateCopy, guessCopy);\n  const partial = CheckPartials(generateCopy, guessCopy);\n  return [exact, partial];\n}\n_c3 = CheckMatches;\nexport default CheckMatches;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CheckExacts\");\n$RefreshReg$(_c2, \"CheckPartials\");\n$RefreshReg$(_c3, \"CheckMatches\");","map":{"version":3,"names":["CheckExacts","generateCopy","guessCopy","i","exact","_c","CheckPartials","partial","j","_c2","CheckMatches","generateColors","guessColors","slice","_c3","$RefreshReg$"],"sources":["/Users/tiansigu/Documents/CS514/react-gcp-app-engine/src/CheckMatches.js"],"sourcesContent":["function CheckExacts(generateCopy, guessCopy) {\n    let i = 0;\n    let exact = 0;\n    while (i < 4) {\n        //When a match is made, cross out the matched elements in both guess and secret.\n        if (generateCopy[i] === guessCopy[i]) {\n            exact = exact + 1;\n            generateCopy[i] = \"white\";\n            guessCopy[i] = \"black\";\n        }\n        i++;\n    }\n    return exact;\n}\n\nfunction CheckPartials(generateCopy, guessCopy) {\n    let i = 0;\n    let partial = 0;\n    while (i < 4) {\n        let j = 0;\n        while (j < 4) {\n        //When a match is made, cross out the matched elements in both guess and secret.\n            if (generateCopy[i] === guessCopy[j]) {\n                partial = partial + 1;\n                generateCopy[i]= \"white\";\n                guessCopy[i] = \"black\";\n            }\n        j++;\n        }\n            i++;\n        }\n    return partial;\n}\n\nfunction CheckMatches(generateColors, guessColors) {\n    let generateCopy = generateColors.slice();\n    let guessCopy = guessColors.slice();\n    const exact = CheckExacts(generateCopy, guessCopy);\n    const partial = CheckPartials(generateCopy, guessCopy);\n    return [exact, partial];\n}\n\nexport default CheckMatches;"],"mappings":"AAAA,SAASA,WAAWA,CAACC,YAAY,EAAEC,SAAS,EAAE;EAC1C,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,KAAK,GAAG,CAAC;EACb,OAAOD,CAAC,GAAG,CAAC,EAAE;IACV;IACA,IAAIF,YAAY,CAACE,CAAC,CAAC,KAAKD,SAAS,CAACC,CAAC,CAAC,EAAE;MAClCC,KAAK,GAAGA,KAAK,GAAG,CAAC;MACjBH,YAAY,CAACE,CAAC,CAAC,GAAG,OAAO;MACzBD,SAAS,CAACC,CAAC,CAAC,GAAG,OAAO;IAC1B;IACAA,CAAC,EAAE;EACP;EACA,OAAOC,KAAK;AAChB;AAACC,EAAA,GAbQL,WAAW;AAepB,SAASM,aAAaA,CAACL,YAAY,EAAEC,SAAS,EAAE;EAC5C,IAAIC,CAAC,GAAG,CAAC;EACT,IAAII,OAAO,GAAG,CAAC;EACf,OAAOJ,CAAC,GAAG,CAAC,EAAE;IACV,IAAIK,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAG,CAAC,EAAE;MACd;MACI,IAAIP,YAAY,CAACE,CAAC,CAAC,KAAKD,SAAS,CAACM,CAAC,CAAC,EAAE;QAClCD,OAAO,GAAGA,OAAO,GAAG,CAAC;QACrBN,YAAY,CAACE,CAAC,CAAC,GAAE,OAAO;QACxBD,SAAS,CAACC,CAAC,CAAC,GAAG,OAAO;MAC1B;MACJK,CAAC,EAAE;IACH;IACIL,CAAC,EAAE;EACP;EACJ,OAAOI,OAAO;AAClB;AAACE,GAAA,GAjBQH,aAAa;AAmBtB,SAASI,YAAYA,CAACC,cAAc,EAAEC,WAAW,EAAE;EAC/C,IAAIX,YAAY,GAAGU,cAAc,CAACE,KAAK,CAAC,CAAC;EACzC,IAAIX,SAAS,GAAGU,WAAW,CAACC,KAAK,CAAC,CAAC;EACnC,MAAMT,KAAK,GAAGJ,WAAW,CAACC,YAAY,EAAEC,SAAS,CAAC;EAClD,MAAMK,OAAO,GAAGD,aAAa,CAACL,YAAY,EAAEC,SAAS,CAAC;EACtD,OAAO,CAACE,KAAK,EAAEG,OAAO,CAAC;AAC3B;AAACO,GAAA,GANQJ,YAAY;AAQrB,eAAeA,YAAY;AAAC,IAAAL,EAAA,EAAAI,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}