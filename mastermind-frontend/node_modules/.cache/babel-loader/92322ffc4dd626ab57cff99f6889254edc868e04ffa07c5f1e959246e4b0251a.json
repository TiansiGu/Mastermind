{"ast":null,"code":"function CheckExacts(generatColors, guessColors) {\n  i = 0;\n  exact = 0;\n  while (i < 4) {\n    //When a match is made, cross out the matched elements in both guess and secret.\n    if (phraseSB.charAt(i) == guessSB.charAt(i)) {\n      exact = exact + 1;\n      phraseSB.setCharAt(i, '-');\n      guessSB.setCharAt(i, '*');\n    }\n    i++;\n  }\n  return exact;\n}\n_c = CheckExacts;\nfunction CheckPartials(generatColors, guessColors) {\n  i = 0;\n  partial = 0;\n  while (i < 4) {\n    j = 0;\n    while (j < 4) {\n      //When a match is made, cross out the matched elements in both guess and secret.\n      if (phraseSB.charAt(i) == guessSB.charAt(j)) {\n        partials = partials + 1;\n        phraseSB.setCharAt(i, '-');\n        guessSB.setCharAt(j, '*');\n      }\n      j++;\n    }\n    i++;\n  }\n  return partial;\n}\n_c2 = CheckPartials;\nfunction CheckMatches(generatColors, guessColors) {\n  const exact = CheckExacts(generatColors, guessColors);\n  const partial = CheckPartials(generatColors, guessColors);\n  return [exact, partial];\n}\n_c3 = CheckMatches;\nexport default CheckMatches;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CheckExacts\");\n$RefreshReg$(_c2, \"CheckPartials\");\n$RefreshReg$(_c3, \"CheckMatches\");","map":{"version":3,"names":["CheckExacts","generatColors","guessColors","i","exact","phraseSB","charAt","guessSB","setCharAt","_c","CheckPartials","partial","j","partials","_c2","CheckMatches","_c3","$RefreshReg$"],"sources":["/Users/tiansigu/Documents/CS514/react-gcp-app-engine/src/CheckMatches.js"],"sourcesContent":["function CheckExacts(generatColors, guessColors) {\n    i = 0;\n    exact = 0;\n    while (i < 4) {\n        //When a match is made, cross out the matched elements in both guess and secret.\n        if (phraseSB.charAt(i) == guessSB.charAt(i)) {\n            exact = exact + 1;\n            phraseSB.setCharAt(i, '-');\n            guessSB.setCharAt(i, '*');\n        }\n        i++;\n    }\n    return exact;\n}\n\nfunction CheckPartials(generatColors, guessColors) {\n    i = 0;\n    partial = 0;\n    while (i < 4) {\n        j = 0;\n        while (j < 4) {\n        //When a match is made, cross out the matched elements in both guess and secret.\n            if (phraseSB.charAt(i) == guessSB.charAt(j)) {\n                partials = partials + 1;\n                phraseSB.setCharAt(i,'-');\n                guessSB.setCharAt(j,'*');\n            }\n        j++;\n        }\n            i++;\n        }\n    return partial;\n}\n\nfunction CheckMatches(generatColors, guessColors) {\n    const exact = CheckExacts(generatColors, guessColors);\n    const partial = CheckPartials(generatColors, guessColors);\n    return [exact, partial];\n}\n\nexport default CheckMatches;"],"mappings":"AAAA,SAASA,WAAWA,CAACC,aAAa,EAAEC,WAAW,EAAE;EAC7CC,CAAC,GAAG,CAAC;EACLC,KAAK,GAAG,CAAC;EACT,OAAOD,CAAC,GAAG,CAAC,EAAE;IACV;IACA,IAAIE,QAAQ,CAACC,MAAM,CAACH,CAAC,CAAC,IAAII,OAAO,CAACD,MAAM,CAACH,CAAC,CAAC,EAAE;MACzCC,KAAK,GAAGA,KAAK,GAAG,CAAC;MACjBC,QAAQ,CAACG,SAAS,CAACL,CAAC,EAAE,GAAG,CAAC;MAC1BI,OAAO,CAACC,SAAS,CAACL,CAAC,EAAE,GAAG,CAAC;IAC7B;IACAA,CAAC,EAAE;EACP;EACA,OAAOC,KAAK;AAChB;AAACK,EAAA,GAbQT,WAAW;AAepB,SAASU,aAAaA,CAACT,aAAa,EAAEC,WAAW,EAAE;EAC/CC,CAAC,GAAG,CAAC;EACLQ,OAAO,GAAG,CAAC;EACX,OAAOR,CAAC,GAAG,CAAC,EAAE;IACVS,CAAC,GAAG,CAAC;IACL,OAAOA,CAAC,GAAG,CAAC,EAAE;MACd;MACI,IAAIP,QAAQ,CAACC,MAAM,CAACH,CAAC,CAAC,IAAII,OAAO,CAACD,MAAM,CAACM,CAAC,CAAC,EAAE;QACzCC,QAAQ,GAAGA,QAAQ,GAAG,CAAC;QACvBR,QAAQ,CAACG,SAAS,CAACL,CAAC,EAAC,GAAG,CAAC;QACzBI,OAAO,CAACC,SAAS,CAACI,CAAC,EAAC,GAAG,CAAC;MAC5B;MACJA,CAAC,EAAE;IACH;IACIT,CAAC,EAAE;EACP;EACJ,OAAOQ,OAAO;AAClB;AAACG,GAAA,GAjBQJ,aAAa;AAmBtB,SAASK,YAAYA,CAACd,aAAa,EAAEC,WAAW,EAAE;EAC9C,MAAME,KAAK,GAAGJ,WAAW,CAACC,aAAa,EAAEC,WAAW,CAAC;EACrD,MAAMS,OAAO,GAAGD,aAAa,CAACT,aAAa,EAAEC,WAAW,CAAC;EACzD,OAAO,CAACE,KAAK,EAAEO,OAAO,CAAC;AAC3B;AAACK,GAAA,GAJQD,YAAY;AAMrB,eAAeA,YAAY;AAAC,IAAAN,EAAA,EAAAK,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}