{"ast":null,"code":"function CheckExacts(generateCopy,guessCopy){var i=0;var exact=0;while(i<4){//When a match is made, cross out the matched elements in both guess and secret.\nif(generateCopy[i]===guessCopy[i]){exact=exact+1;generateCopy[i]=\"white\";guessCopy[i]=\"black\";}i++;}return exact;}function CheckPartials(generateCopy,guessCopy){var i=0;var partial=0;while(i<4){var j=0;while(j<4){//When a match is made, cross out the matched elements in both guess and secret.\nif(generateCopy[i]===guessCopy[j]){partial=partial+1;generateCopy[i]=\"white\";guessCopy[j]=\"black\";}j++;}i++;}return partial;}function CheckMatches(generateColors,guessColors){var generateCopy=generateColors.slice();var guessCopy=guessColors.slice();var exact=CheckExacts(generateCopy,guessCopy);var partial=CheckPartials(generateCopy,guessCopy);return[exact,partial];}export default CheckMatches;","map":{"version":3,"names":["CheckExacts","generateCopy","guessCopy","i","exact","CheckPartials","partial","j","CheckMatches","generateColors","guessColors","slice"],"sources":["/Users/tiansigu/Documents/CS514/Project4-Part1/mastermind-frontend/src/CheckMatches.js"],"sourcesContent":["function CheckExacts(generateCopy, guessCopy) {\n    let i = 0;\n    let exact = 0;\n    while (i < 4) {\n        //When a match is made, cross out the matched elements in both guess and secret.\n        if (generateCopy[i] === guessCopy[i]) {\n            exact = exact + 1;\n            generateCopy[i] = \"white\";\n            guessCopy[i] = \"black\";\n        }\n        i++;\n    }\n    return exact;\n}\n\nfunction CheckPartials(generateCopy, guessCopy) {\n    let i = 0;\n    let partial = 0;\n    while (i < 4) {\n        let j = 0;\n        while (j < 4) {\n        //When a match is made, cross out the matched elements in both guess and secret.\n            if (generateCopy[i] === guessCopy[j]) {\n                partial = partial + 1;\n                generateCopy[i]= \"white\";\n                guessCopy[j] = \"black\";\n            }\n        j++;\n        }\n            i++;\n        }\n    return partial;\n}\n\nfunction CheckMatches(generateColors, guessColors) {\n    let generateCopy = generateColors.slice();\n    let guessCopy = guessColors.slice();\n    const exact = CheckExacts(generateCopy, guessCopy);\n    const partial = CheckPartials(generateCopy, guessCopy);\n    return [exact, partial];\n}\n\nexport default CheckMatches;"],"mappings":"AAAA,QAAS,CAAAA,WAAWA,CAACC,YAAY,CAAEC,SAAS,CAAE,CAC1C,GAAI,CAAAC,CAAC,CAAG,CAAC,CACT,GAAI,CAAAC,KAAK,CAAG,CAAC,CACb,MAAOD,CAAC,CAAG,CAAC,CAAE,CACV;AACA,GAAIF,YAAY,CAACE,CAAC,CAAC,GAAKD,SAAS,CAACC,CAAC,CAAC,CAAE,CAClCC,KAAK,CAAGA,KAAK,CAAG,CAAC,CACjBH,YAAY,CAACE,CAAC,CAAC,CAAG,OAAO,CACzBD,SAAS,CAACC,CAAC,CAAC,CAAG,OAAO,CAC1B,CACAA,CAAC,EAAE,CACP,CACA,MAAO,CAAAC,KAAK,CAChB,CAEA,QAAS,CAAAC,aAAaA,CAACJ,YAAY,CAAEC,SAAS,CAAE,CAC5C,GAAI,CAAAC,CAAC,CAAG,CAAC,CACT,GAAI,CAAAG,OAAO,CAAG,CAAC,CACf,MAAOH,CAAC,CAAG,CAAC,CAAE,CACV,GAAI,CAAAI,CAAC,CAAG,CAAC,CACT,MAAOA,CAAC,CAAG,CAAC,CAAE,CACd;AACI,GAAIN,YAAY,CAACE,CAAC,CAAC,GAAKD,SAAS,CAACK,CAAC,CAAC,CAAE,CAClCD,OAAO,CAAGA,OAAO,CAAG,CAAC,CACrBL,YAAY,CAACE,CAAC,CAAC,CAAE,OAAO,CACxBD,SAAS,CAACK,CAAC,CAAC,CAAG,OAAO,CAC1B,CACJA,CAAC,EAAE,CACH,CACIJ,CAAC,EAAE,CACP,CACJ,MAAO,CAAAG,OAAO,CAClB,CAEA,QAAS,CAAAE,YAAYA,CAACC,cAAc,CAAEC,WAAW,CAAE,CAC/C,GAAI,CAAAT,YAAY,CAAGQ,cAAc,CAACE,KAAK,CAAC,CAAC,CACzC,GAAI,CAAAT,SAAS,CAAGQ,WAAW,CAACC,KAAK,CAAC,CAAC,CACnC,GAAM,CAAAP,KAAK,CAAGJ,WAAW,CAACC,YAAY,CAAEC,SAAS,CAAC,CAClD,GAAM,CAAAI,OAAO,CAAGD,aAAa,CAACJ,YAAY,CAAEC,SAAS,CAAC,CACtD,MAAO,CAACE,KAAK,CAAEE,OAAO,CAAC,CAC3B,CAEA,cAAe,CAAAE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}