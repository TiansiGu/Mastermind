{"ast":null,"code":"var _jsxFileName = \"/Users/tiansigu/Documents/CS514/react-gcp-app-engine/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport CheckMatches from \"./CheckMatches\";\nimport { Button, Image } from \"react-bootstrap\";\nimport \"./App.css\";\n\n// import OneGuessBoard from './Components/OneGuessBoard';\nimport MastermindHeader from './Components/MastermindHeader';\nimport Instruction from './Components/Instruction';\n\n// Instruction Component\n// function Instruction() {\n//   const instructions = [\n//     \"In this game, you'll have to guess colors correctly.\",\n//     \"The secret code consists of a combination of 4 colors, and your task is to figure out the correct order.\",\n//     \"You only have 10 attempts. Try to solve it within the given attempts!\",\n//     \"After each guess, you'll receive feedback. Use this feedback to refine your guesses and crack the code!\",\n//   ];\n\n//   return (\n//     <div className=\"instruction\">\n//       <h2>Instructions</h2>\n//       <ul>\n//         {instructions.map((instruction, index) => (\n//           <li key={index}>{instruction}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// Circle Component, representing each circle/color to be guessed in the Board\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Circle({\n  color,\n  onCircleClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"circle\",\n    onClick: onCircleClick,\n    style: {\n      backgroundColor: color\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = Circle;\nfunction OneGuessBoard({\n  selectColor,\n  isActive,\n  phrase,\n  onRowSubmit,\n  isReset,\n  onWin\n}) {\n  _s();\n  const [colors, setColors] = useState(Array(4).fill(\"#a3a3a3\"));\n  function handleClick(i) {\n    const newColors = colors.slice();\n    newColors[i] = selectColor;\n    {\n      isActive() && setColors(newColors);\n    }\n  }\n  const [match, setMatch] = useState([null, null]);\n  function handleSubmitClick() {\n    if (colors.every(color => color !== \"#a3a3a3\")) {\n      const [exact, partial] = CheckMatches(phrase, colors);\n      setMatch([exact, partial]);\n      if (exact == 4) {\n        onWin();\n      } else {\n        onRowSubmit();\n      }\n    } else {\n      alert(\"You should finish the guess first\");\n    }\n  }\n\n  //clear all the circles' colors and promp buttons whenever the \"Play Again\" button gets called\n  //When clicking \"Play Again\", isReset's value filps, which triggers seColors and setMatch get called\n  useEffect(() => {\n    setColors(Array(4).fill(\"#a3a3a3\"));\n    setMatch([null, null]);\n  }, [isReset]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-container\",\n        children: [/*#__PURE__*/_jsxDEV(Circle, {\n          color: colors[0],\n          onCircleClick: () => handleClick(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          color: colors[1],\n          onCircleClick: () => handleClick(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          color: colors[2],\n          onCircleClick: () => handleClick(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          color: colors[3],\n          onCircleClick: () => handleClick(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-container\",\n        children: [isActive() && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: handleSubmitClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), match[0] !== null && match[1] !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          children: [match[0], \" exact, \", match[1], \" partial\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n// Component of the entire game board, the level of a round of game\n_s(OneGuessBoard, \"cRIX6x+BzIp6Wcv37Ak7cbOGdsA=\");\n_c2 = OneGuessBoard;\nfunction Board() {\n  _s2();\n  // Color Pick \n  const [currentColor, setCurrentColor] = useState(\"#a3a3a3\");\n  const colors = [\"red\", \"blue\", \"green\", \"yellow\", \"orange\", \"purple\"];\n  function handleColorPick(color) {\n    setCurrentColor(color);\n  }\n  let dislayColor;\n  currentColor == \"#a3a3a3\" ? dislayColor = \"You haven't selected yet\" : dislayColor = currentColor;\n\n  // Current Active Row (the n chance in which the player is in, can't skip)\n  const [currentActiveRow, setCurrentActiveRow] = useState(9);\n  function handleSubmit() {\n    setCurrentActiveRow(currentActiveRow - 1);\n    console.log(colorSequence);\n  }\n\n  // Generate a random color sequence\n  const [colorSequence, setColorSequence] = useState([]);\n  function generateSequence() {\n    const sequence = [];\n    for (let i = 0; i < 4; i++) {\n      const randomIndex = Math.floor(Math.random() * colors.length);\n      sequence.push(colors[randomIndex]);\n    }\n    setColorSequence(sequence);\n    console.log(colorSequence);\n  }\n\n  // At the beginning, generate a color sequence\n  useEffect(() => {\n    generateSequence();\n    // console.log(colorSequence);\n  }, []);\n  const [isReset, setIsReset] = useState(false);\n\n  // When clicking \"Play Again\", reset the game\n  function playAgain() {\n    generateSequence(); //generate a new color sequence\n    setCurrentColor(\"#a3a3a3\"); //put the selected color to the initial one\n    setIsReset(!isReset); //filp isReset so that in OneGuessBoard all the colors filled could be cleared\n    setCurrentActiveRow(9); //Roll the game back to the first guess\n    setIsWin(false);\n  }\n\n  // Win or Lose State\n  const [isWin, setIsWin] = useState(false);\n  function handleWin() {\n    setIsWin(true);\n  }\n\n  // Depend on Win, Lose, or in progress, the components to be displayed on the page are different\n  let status;\n  let instruction;\n  if (isWin) {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"YOU WIN!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 14\n    }, this);\n    instruction = /*#__PURE__*/_jsxDEV(Image, {\n      src: \"smileface.png\",\n      roundedCircle: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }, this);\n  } else if (currentActiveRow < 0) {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"YOU LOST!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 14\n    }, this);\n    instruction = /*#__PURE__*/_jsxDEV(Image, {\n      src: \"sadface.png\",\n      roundedCircle: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }, this);\n  } else {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You have \", currentActiveRow + 1, \" chances left.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 14\n    }, this);\n    instruction = /*#__PURE__*/_jsxDEV(Instruction, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MastermindHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: Array(10).fill(null).map((row, index) => {\n            return /*#__PURE__*/_jsxDEV(OneGuessBoard, {\n              selectColor: currentColor,\n              isActive: () => index === currentActiveRow,\n              phrase: colorSequence,\n              onRowSubmit: handleSubmit,\n              isReset: isReset,\n              onWin: handleWin\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-part\",\n            children: instruction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-pick-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Choose a Color:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"color-pick-box\",\n              children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"color-pick-button\",\n                style: {\n                  backgroundColor: color\n                },\n                onClick: () => handleColorPick(color)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"select\",\n              children: [\"Selected Color: \", dislayColor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"play-again\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"play-again-button\",\n          size: \"lg\",\n          onClick: playAgain,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s2(Board, \"d6mBuD3ZPjlh++G6Kmo4EvzHryY=\");\n_c3 = Board;\nexport default Board;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Circle\");\n$RefreshReg$(_c2, \"OneGuessBoard\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","CheckMatches","Button","Image","MastermindHeader","Instruction","jsxDEV","_jsxDEV","Fragment","_Fragment","Circle","color","onCircleClick","className","onClick","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","OneGuessBoard","selectColor","isActive","phrase","onRowSubmit","isReset","onWin","_s","colors","setColors","Array","fill","handleClick","i","newColors","slice","match","setMatch","handleSubmitClick","every","exact","partial","alert","children","_c2","Board","_s2","currentColor","setCurrentColor","handleColorPick","dislayColor","currentActiveRow","setCurrentActiveRow","handleSubmit","console","log","colorSequence","setColorSequence","generateSequence","sequence","randomIndex","Math","floor","random","length","push","setIsReset","playAgain","setIsWin","isWin","handleWin","status","instruction","src","roundedCircle","map","row","index","size","_c3","$RefreshReg$"],"sources":["/Users/tiansigu/Documents/CS514/react-gcp-app-engine/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport CheckMatches from \"./CheckMatches\";\nimport { Button, Image } from \"react-bootstrap\";\nimport \"./App.css\";\n\n// import OneGuessBoard from './Components/OneGuessBoard';\nimport MastermindHeader from './Components/MastermindHeader';\nimport Instruction from './Components/Instruction';\n\n\n// Instruction Component\n// function Instruction() {\n//   const instructions = [\n//     \"In this game, you'll have to guess colors correctly.\",\n//     \"The secret code consists of a combination of 4 colors, and your task is to figure out the correct order.\",\n//     \"You only have 10 attempts. Try to solve it within the given attempts!\",\n//     \"After each guess, you'll receive feedback. Use this feedback to refine your guesses and crack the code!\",\n//   ];\n\n//   return (\n//     <div className=\"instruction\">\n//       <h2>Instructions</h2>\n//       <ul>\n//         {instructions.map((instruction, index) => (\n//           <li key={index}>{instruction}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// Circle Component, representing each circle/color to be guessed in the Board\nfunction Circle({ color, onCircleClick }) {\n  return (\n    <button\n      className=\"circle\"\n      onClick={onCircleClick}\n      style={{ backgroundColor: color }}\n    ></button>\n  );\n}\n\nfunction OneGuessBoard({\n  selectColor,\n  isActive,\n  phrase,\n  onRowSubmit,\n  isReset,\n  onWin,\n}) {\n  const [colors, setColors] = useState(Array(4).fill(\"#a3a3a3\"));\n\n  function handleClick(i) {\n    const newColors = colors.slice();\n    newColors[i] = selectColor;\n    {\n      isActive() && setColors(newColors);\n    }\n  }\n\n  const [match, setMatch] = useState([null, null]);\n\n  function handleSubmitClick() {\n    if (colors.every((color) => color !== \"#a3a3a3\")) {\n      const [exact, partial] = CheckMatches(phrase, colors);\n      setMatch([exact, partial]);\n      if (exact == 4) {\n        onWin();\n      } else {\n        onRowSubmit();\n      }\n    } else {\n      alert(\"You should finish the guess first\");\n    }\n  }\n\n  //clear all the circles' colors and promp buttons whenever the \"Play Again\" button gets called\n  //When clicking \"Play Again\", isReset's value filps, which triggers seColors and setMatch get called\n  useEffect(() => {\n    setColors(Array(4).fill(\"#a3a3a3\"));\n    setMatch([null, null]);\n  }, [isReset]);\n\n  return (\n    <>\n      <div className=\"board-row\">\n        <div className=\"circle-container\">\n          <Circle color={colors[0]} onCircleClick={() => handleClick(0)} />\n          <Circle color={colors[1]} onCircleClick={() => handleClick(1)} />\n          <Circle color={colors[2]} onCircleClick={() => handleClick(2)} />\n          <Circle color={colors[3]} onCircleClick={() => handleClick(3)} />\n        </div>\n        <div className=\"submit-container\">\n          {isActive() && (\n            <button className=\"submit\" onClick={handleSubmitClick}>\n              Submit\n            </button>\n          )}\n          {match[0] !== null && match[1] !== null && (\n            <button className=\"submit\">\n              {match[0]} exact, {match[1]} partial\n            </button>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\n\n// Component of the entire game board, the level of a round of game\nfunction Board() {\n  // Color Pick \n  const [currentColor, setCurrentColor] = useState(\"#a3a3a3\");\n  const colors = [\"red\", \"blue\", \"green\", \"yellow\", \"orange\", \"purple\"];\n  function handleColorPick(color) {\n    setCurrentColor(color);\n  }\n  let dislayColor;\n  currentColor == \"#a3a3a3\"\n    ? (dislayColor = \"You haven't selected yet\")\n    : (dislayColor = currentColor);\n\n  // Current Active Row (the n chance in which the player is in, can't skip)\n  const [currentActiveRow, setCurrentActiveRow] = useState(9);\n  function handleSubmit() {\n    setCurrentActiveRow(currentActiveRow - 1);\n    console.log(colorSequence);\n  }\n\n  // Generate a random color sequence\n  const [colorSequence, setColorSequence] = useState([]);\n\n  function generateSequence() {\n    const sequence = [];\n    for (let i = 0; i < 4; i++) {\n      const randomIndex = Math.floor(Math.random() * colors.length);\n      sequence.push(colors[randomIndex]);\n    }\n    setColorSequence(sequence);\n    console.log(colorSequence);\n  }\n\n  // At the beginning, generate a color sequence\n  useEffect(() => {\n    generateSequence();\n    // console.log(colorSequence);\n  }, []);\n\n  const [isReset, setIsReset] = useState(false);\n\n  // When clicking \"Play Again\", reset the game\n  function playAgain() {\n    generateSequence(); //generate a new color sequence\n    setCurrentColor(\"#a3a3a3\"); //put the selected color to the initial one\n    setIsReset(!isReset); //filp isReset so that in OneGuessBoard all the colors filled could be cleared\n    setCurrentActiveRow(9); //Roll the game back to the first guess\n    setIsWin(false);\n  }\n\n  // Win or Lose State\n  const [isWin, setIsWin] = useState(false);\n\n  function handleWin() {\n    setIsWin(true);\n  }\n\n  // Depend on Win, Lose, or in progress, the components to be displayed on the page are different\n  let status;\n  let instruction;\n  if (isWin) {\n    status = <p>YOU WIN!</p>;\n    instruction = <Image src=\"smileface.png\" roundedCircle />;\n  } else if (currentActiveRow < 0) {\n    status = <p>YOU LOST!</p>;\n    instruction = <Image src=\"sadface.png\" roundedCircle />;\n  } else {\n    status = <p>You have {currentActiveRow + 1} chances left.</p>;\n    instruction = <Instruction />;\n  }\n\n  return (\n    <div className=\"App\">\n      <MastermindHeader />\n      <div className=\"board\">\n        {/* use bootstrap grid system */}\n        <div className=\"row mt-3\"> \n        {/* Board Area */}\n          <div className=\"col-md-4\">\n            {Array(10)\n              .fill(null)\n              .map((row, index) => {\n                return (\n                  <OneGuessBoard\n                    key={index}\n                    selectColor={currentColor}\n                    isActive={() => index === currentActiveRow}\n                    phrase={colorSequence}\n                    onRowSubmit={handleSubmit}\n                    isReset={isReset}\n                    onWin={handleWin}\n                  />\n                );\n              })}\n          </div>\n\n          {/* Instruction Area */}\n          <div className=\"col-md-4\">\n            <div className=\"instruction-part\">{instruction}</div>\n            <div className=\"prompt\">{status}</div>\n          </div>\n\n          {/* Color Pick Area */}\n          <div className=\"col-md-4\">\n            <div className=\"color-pick-section\">\n              <h2>Choose a Color:</h2>\n              <div className=\"color-pick-box\">\n                {colors.map((color, index) => (\n                  <button\n                    key={index}\n                    className=\"color-pick-button\"\n                    style={{ backgroundColor: color }}\n                    onClick={() => handleColorPick(color)}\n                  ></button>\n                ))}\n              </div>\n              <p className=\"select\">Selected Color: {dislayColor}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"play-again\">\n          <Button className=\"play-again-button\" size=\"lg\" onClick={playAgain}>\n            Play Again\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}