{"ast":null,"code":"import _slicedToArray from\"/Users/tiansigu/Documents/CS514/Project4-Part1/mastermind-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{Row,Col,Pagination,Dropdown}from\"react-bootstrap\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function PaginationComponent(_ref){var activePage=_ref.activePage,itemsPerPage=_ref.itemsPerPage,totalItems=_ref.totalItems,onPageChange=_ref.onPageChange,onItemsPerPageChange=_ref.onItemsPerPageChange,select=_ref.select;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];//control the active display of page option (darker color)\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pages=_useState4[0],setPages=_useState4[1];//an array of int from 1\nvar itemsPerPageOptions=[5,10,20];// Update pages array (determines num of page optional blocks) based on totalItems and itemsPerPage\nuseEffect(function(){var totalPages=Math.ceil(totalItems/itemsPerPage);// console.log(\"Total items is \" + totalItems);\n// console.log(\"Items per page is \" + itemsPerPage);\n// console.log(totalPages + \" pages in total\");\nvar newPages=Array.from({length:totalPages},function(_,index){return index;});setPages(newPages);},[totalItems,itemsPerPage]);// Make sure when switch between two kinds of records, reset the current active page option to be page 1\nuseEffect(function(){setCurrentPage(0);// console.log(\"This effect is executed. The current page is \" + currentPage);\n},[select]);useEffect(function(){setCurrentPage(activePage);console.log(\"This effect is executed, currentPage changed to \"+activePage);},[activePage]);// Function that invokes API call of corresponding data when change page\nvar handlePageChange=function handlePageChange(page){setCurrentPage(page);//invoke API call\nonPageChange(page);//update active(darker) page button\n};// Function that invokes API call of corresponding data when change size\nvar handleItemsPerPageChange=function handleItemsPerPageChange(size){setCurrentPage(0);// Reset to the first page when changing items per page\nonItemsPerPageChange(size);};return/*#__PURE__*/_jsxs(Row,{className:\"justify-content-center mt-3\",children:[/*#__PURE__*/_jsx(Col,{md:4,className:\"d-flex justify-content-center align-items-center\",children:/*#__PURE__*/_jsxs(Dropdown,{children:[/*#__PURE__*/_jsxs(Dropdown.Toggle,{variant:\"info\",id:\"dropdown-basic\",children:[\"records per page: \",itemsPerPage]}),/*#__PURE__*/_jsx(Dropdown.Menu,{children:itemsPerPageOptions.map(function(option){return/*#__PURE__*/_jsx(Dropdown.Item,{onClick:function onClick(){return handleItemsPerPageChange(option);},children:\"\".concat(option,\" /page\")},option);})})]})}),/*#__PURE__*/_jsx(Col,{md:8,className:\"d-flex justify-content-center align-items-center\",children:/*#__PURE__*/_jsx(Pagination,{children:pages.map(function(page){return/*#__PURE__*/_jsx(Pagination.Item,{active:page===currentPage,onClick:function onClick(){return handlePageChange(page);},children:page+1},page);})})})]});}export default PaginationComponent;","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Pagination","Dropdown","jsxs","_jsxs","jsx","_jsx","PaginationComponent","_ref","activePage","itemsPerPage","totalItems","onPageChange","onItemsPerPageChange","select","_useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","pages","setPages","itemsPerPageOptions","totalPages","Math","ceil","newPages","Array","from","length","_","index","console","log","handlePageChange","page","handleItemsPerPageChange","size","className","children","md","Toggle","variant","id","Menu","map","option","Item","onClick","concat","active"],"sources":["/Users/tiansigu/Documents/CS514/Project4-Part1/mastermind-frontend/src/Components/Pagination.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Pagination, Dropdown } from \"react-bootstrap\";\n\nfunction PaginationComponent({\n  activePage,\n  itemsPerPage,\n  totalItems,\n  onPageChange,\n  onItemsPerPageChange,\n  select,\n}) {\n  const [currentPage, setCurrentPage] = useState(0); //control the active display of page option (darker color)\n  const [pages, setPages] = useState([]); //an array of int from 1\n  const itemsPerPageOptions = [5, 10, 20];\n\n  // Update pages array (determines num of page optional blocks) based on totalItems and itemsPerPage\n  useEffect(() => {\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\n    // console.log(\"Total items is \" + totalItems);\n    // console.log(\"Items per page is \" + itemsPerPage);\n    // console.log(totalPages + \" pages in total\");\n    const newPages = Array.from({ length: totalPages }, (_, index) => index);\n    setPages(newPages);\n  }, [totalItems, itemsPerPage]);\n\n  // Make sure when switch between two kinds of records, reset the current active page option to be page 1\n  useEffect(() => {\n    setCurrentPage(0);\n    // console.log(\"This effect is executed. The current page is \" + currentPage);\n  }, [select]);\n\n  useEffect(() => {\n    setCurrentPage(activePage);\n    console.log(\n      \"This effect is executed, currentPage changed to \" + activePage\n    );\n  }, [activePage]);\n\n  // Function that invokes API call of corresponding data when change page\n  const handlePageChange = (page) => {\n    setCurrentPage(page); //invoke API call\n    onPageChange(page); //update active(darker) page button\n  };\n\n  // Function that invokes API call of corresponding data when change size\n  const handleItemsPerPageChange = (size) => {\n    setCurrentPage(0); // Reset to the first page when changing items per page\n    onItemsPerPageChange(size);\n  };\n\n  return (\n    <Row className=\"justify-content-center mt-3\">\n      {/** Records /page selection */}\n      <Col md={4} className=\"d-flex justify-content-center align-items-center\">\n        <Dropdown>\n          <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n            records per page: {itemsPerPage}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {itemsPerPageOptions.map((option) => (\n              <Dropdown.Item\n                key={option}\n                onClick={() => handleItemsPerPageChange(option)}\n              >\n                {`${option} /page`}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      </Col>\n      {/** Page selection */}\n      <Col md={8} className=\"d-flex justify-content-center align-items-center\">\n        <Pagination>\n          {pages.map((page) => (\n            <Pagination.Item\n              key={page}\n              active={page === currentPage}\n              onClick={() => handlePageChange(page)}\n            >\n              {page + 1}\n            </Pagination.Item>\n          ))}\n        </Pagination>\n      </Col>\n    </Row>\n  );\n}\n\nexport default PaginationComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}