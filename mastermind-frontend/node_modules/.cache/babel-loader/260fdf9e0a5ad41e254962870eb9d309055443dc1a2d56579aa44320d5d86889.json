{"ast":null,"code":"function CheckExacts(generateColors, guessColors) {\n  let i = 0;\n  let exact = 0;\n  while (i < 4) {\n    //When a match is made, cross out the matched elements in both guess and secret.\n    if (generateColors.charAt(i) === guessColors.charAt(i)) {\n      exact = exact + 1;\n      generateColors.setCharAt(i, '-');\n      guessColors.setCharAt(i, '*');\n    }\n    i++;\n  }\n  return exact;\n}\n_c = CheckExacts;\nfunction CheckPartials(generateColors, guessColors) {\n  let i = 0;\n  let partial = 0;\n  while (i < 4) {\n    let j = 0;\n    while (j < 4) {\n      //When a match is made, cross out the matched elements in both guess and secret.\n      if (generateColors.charAt(i) === guessColors.charAt(j)) {\n        partial = partial + 1;\n        generateColors.setCharAt(i, '-');\n        guessColors.setCharAt(j, '*');\n      }\n      j++;\n    }\n    i++;\n  }\n  return partial;\n}\n_c2 = CheckPartials;\nfunction CheckMatches(generateColors, guessColors) {\n  const exact = CheckExacts(generateColors, guessColors);\n  const partial = CheckPartials(generateColors, guessColors);\n  return [exact, partial];\n}\n_c3 = CheckMatches;\nexport default CheckMatches;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CheckExacts\");\n$RefreshReg$(_c2, \"CheckPartials\");\n$RefreshReg$(_c3, \"CheckMatches\");","map":{"version":3,"names":["CheckExacts","generateColors","guessColors","i","exact","charAt","setCharAt","_c","CheckPartials","partial","j","_c2","CheckMatches","_c3","$RefreshReg$"],"sources":["/Users/tiansigu/Documents/CS514/react-gcp-app-engine/src/CheckMatches.js"],"sourcesContent":["function CheckExacts(generateColors, guessColors) {\n    let i = 0;\n    let exact = 0;\n    while (i < 4) {\n        //When a match is made, cross out the matched elements in both guess and secret.\n        if (generateColors.charAt(i) === guessColors.charAt(i)) {\n            exact = exact + 1;\n            generateColors.setCharAt(i, '-');\n            guessColors.setCharAt(i, '*');\n        }\n        i++;\n    }\n    return exact;\n}\n\nfunction CheckPartials(generateColors, guessColors) {\n    let i = 0;\n    let partial = 0;\n    while (i < 4) {\n        let j = 0;\n        while (j < 4) {\n        //When a match is made, cross out the matched elements in both guess and secret.\n            if (generateColors.charAt(i) === guessColors.charAt(j)) {\n                partial = partial + 1;\n                generateColors.setCharAt(i,'-');\n                guessColors.setCharAt(j,'*');\n            }\n        j++;\n        }\n            i++;\n        }\n    return partial;\n}\n\nfunction CheckMatches(generateColors, guessColors) {\n    const exact = CheckExacts(generateColors, guessColors);\n    const partial = CheckPartials(generateColors, guessColors);\n    return [exact, partial];\n}\n\nexport default CheckMatches;"],"mappings":"AAAA,SAASA,WAAWA,CAACC,cAAc,EAAEC,WAAW,EAAE;EAC9C,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,KAAK,GAAG,CAAC;EACb,OAAOD,CAAC,GAAG,CAAC,EAAE;IACV;IACA,IAAIF,cAAc,CAACI,MAAM,CAACF,CAAC,CAAC,KAAKD,WAAW,CAACG,MAAM,CAACF,CAAC,CAAC,EAAE;MACpDC,KAAK,GAAGA,KAAK,GAAG,CAAC;MACjBH,cAAc,CAACK,SAAS,CAACH,CAAC,EAAE,GAAG,CAAC;MAChCD,WAAW,CAACI,SAAS,CAACH,CAAC,EAAE,GAAG,CAAC;IACjC;IACAA,CAAC,EAAE;EACP;EACA,OAAOC,KAAK;AAChB;AAACG,EAAA,GAbQP,WAAW;AAepB,SAASQ,aAAaA,CAACP,cAAc,EAAEC,WAAW,EAAE;EAChD,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIM,OAAO,GAAG,CAAC;EACf,OAAON,CAAC,GAAG,CAAC,EAAE;IACV,IAAIO,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAG,CAAC,EAAE;MACd;MACI,IAAIT,cAAc,CAACI,MAAM,CAACF,CAAC,CAAC,KAAKD,WAAW,CAACG,MAAM,CAACK,CAAC,CAAC,EAAE;QACpDD,OAAO,GAAGA,OAAO,GAAG,CAAC;QACrBR,cAAc,CAACK,SAAS,CAACH,CAAC,EAAC,GAAG,CAAC;QAC/BD,WAAW,CAACI,SAAS,CAACI,CAAC,EAAC,GAAG,CAAC;MAChC;MACJA,CAAC,EAAE;IACH;IACIP,CAAC,EAAE;EACP;EACJ,OAAOM,OAAO;AAClB;AAACE,GAAA,GAjBQH,aAAa;AAmBtB,SAASI,YAAYA,CAACX,cAAc,EAAEC,WAAW,EAAE;EAC/C,MAAME,KAAK,GAAGJ,WAAW,CAACC,cAAc,EAAEC,WAAW,CAAC;EACtD,MAAMO,OAAO,GAAGD,aAAa,CAACP,cAAc,EAAEC,WAAW,CAAC;EAC1D,OAAO,CAACE,KAAK,EAAEK,OAAO,CAAC;AAC3B;AAACI,GAAA,GAJQD,YAAY;AAMrB,eAAeA,YAAY;AAAC,IAAAL,EAAA,EAAAI,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}