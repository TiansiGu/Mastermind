{"ast":null,"code":"var _jsxFileName = \"/Users/tiansigu/Documents/CS514/Project4/react-gcp-app-engine/src/Components/Pagination.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Pagination, Dropdown } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaginationComponent({\n  activePage,\n  itemsPerPage,\n  totalItems,\n  onPageChange,\n  onItemsPerPageChange,\n  select\n}) {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0); //control the active display of page option (darker color)\n  const [pages, setPages] = useState([]); //an array of int from 1\n  const itemsPerPageOptions = [5, 10, 20];\n\n  // Update pages array (determines num of page optional blocks) based on totalItems and itemsPerPage\n  useEffect(() => {\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\n    // console.log(\"Total items is \" + totalItems);\n    // console.log(\"Items per page is \" + itemsPerPage);\n    // console.log(totalPages + \" pages in total\");\n    const newPages = Array.from({\n      length: totalPages\n    }, (_, index) => index);\n    setPages(newPages);\n  }, [totalItems, itemsPerPage]);\n\n  // Make sure when switch between two kinds of records, reset the current active page option to be page 1\n  useEffect(() => {\n    setCurrentPage(0);\n    // console.log(\"This effect is executed. The current page is \" + currentPage);\n  }, [select]);\n  useEffect(() => {\n    setCurrentPage(activePage);\n    console.log(\"This effect is executed, currentPage changed\");\n  }, [activePage]);\n\n  // Function that invokes API call of corresponding data when change page\n  const handlePageChange = page => {\n    setCurrentPage(page); //invoke API call\n    onPageChange(page); //update active(darker) page button\n  };\n\n  // Function that invokes API call of corresponding data when change size\n  const handleItemsPerPageChange = size => {\n    setCurrentPage(0); // Reset to the first page when changing items per page\n    onItemsPerPageChange(size);\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"justify-content-center mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      className: \"d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"info\",\n          id: \"dropdown-basic\",\n          children: [\"records per page: \", itemsPerPage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: itemsPerPageOptions.map(option => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleItemsPerPageChange(option),\n            children: `${option} /page`\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      className: \"d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        children: pages.map(page => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: page === currentPage,\n          onClick: () => handlePageChange(page),\n          children: page + 1\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(PaginationComponent, \"F7b6vfnZhBl3GTubwS9XIRLIS1s=\");\n_c = PaginationComponent;\nexport default PaginationComponent;\nvar _c;\n$RefreshReg$(_c, \"PaginationComponent\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Pagination","Dropdown","jsxDEV","_jsxDEV","PaginationComponent","activePage","itemsPerPage","totalItems","onPageChange","onItemsPerPageChange","select","_s","currentPage","setCurrentPage","pages","setPages","itemsPerPageOptions","totalPages","Math","ceil","newPages","Array","from","length","_","index","console","log","handlePageChange","page","handleItemsPerPageChange","size","className","children","md","Toggle","variant","id","fileName","_jsxFileName","lineNumber","columnNumber","Menu","map","option","Item","onClick","active","_c","$RefreshReg$"],"sources":["/Users/tiansigu/Documents/CS514/Project4/react-gcp-app-engine/src/Components/Pagination.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Pagination, Dropdown } from \"react-bootstrap\";\n\nfunction PaginationComponent({\n  activePage,\n  itemsPerPage,\n  totalItems,\n  onPageChange,\n  onItemsPerPageChange,\n  select,\n}) {\n  const [currentPage, setCurrentPage] = useState(0); //control the active display of page option (darker color)\n  const [pages, setPages] = useState([]); //an array of int from 1\n  const itemsPerPageOptions = [5, 10, 20];\n\n  // Update pages array (determines num of page optional blocks) based on totalItems and itemsPerPage\n  useEffect(() => {\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\n    // console.log(\"Total items is \" + totalItems);\n    // console.log(\"Items per page is \" + itemsPerPage);\n    // console.log(totalPages + \" pages in total\");\n    const newPages = Array.from({ length: totalPages }, (_, index) => index);\n    setPages(newPages);\n  }, [totalItems, itemsPerPage]);\n\n  // Make sure when switch between two kinds of records, reset the current active page option to be page 1\n  useEffect(() => {\n    setCurrentPage(0);\n    // console.log(\"This effect is executed. The current page is \" + currentPage);\n  }, [select]);\n\n  useEffect(() => {\n    setCurrentPage(activePage);\n    console.log(\"This effect is executed, currentPage changed\");\n  }, [activePage]);\n\n  // Function that invokes API call of corresponding data when change page\n  const handlePageChange = (page) => {\n    setCurrentPage(page); //invoke API call\n    onPageChange(page); //update active(darker) page button\n  };\n\n  // Function that invokes API call of corresponding data when change size\n  const handleItemsPerPageChange = (size) => {\n    setCurrentPage(0); // Reset to the first page when changing items per page\n    onItemsPerPageChange(size);\n  };\n\n  return (\n    <Row className=\"justify-content-center mt-3\">\n      {/** Records /page selection */}\n      <Col md={4} className=\"d-flex justify-content-center align-items-center\">\n        <Dropdown>\n          <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n            records per page: {itemsPerPage}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {itemsPerPageOptions.map((option) => (\n              <Dropdown.Item\n                key={option}\n                onClick={() => handleItemsPerPageChange(option)}\n              >\n                {`${option} /page`}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      </Col>\n      {/** Page selection */}\n      <Col md={8} className=\"d-flex justify-content-center align-items-center\">\n        <Pagination>\n          {pages.map((page) => (\n            <Pagination.Item\n              key={page}\n              active={page === currentPage}\n              onClick={() => handlePageChange(page)}\n            >\n              {page + 1}\n            </Pagination.Item>\n          ))}\n        </Pagination>\n      </Col>\n    </Row>\n  );\n}\n\nexport default PaginationComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}